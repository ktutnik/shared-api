import supertest from "supertest"
import createApp from "../src/app"
import { closeConnection, createUser, ignoreProps } from "./helper"

afterEach(async () => {
    await closeConnection()
})

describe("Application", () => {
    it("Should create application properly, should not active by default", async () => {
        const app = await createApp({ mode: "production" })
        const user = await createUser(app)
        const { body } = await supertest(app.callback())
            .post("/api/backend/applications")
            .set("Authorization", `Bearer ${user.token}`)
            .send({ name: "Lorem Ipsum" })
            .expect(200)
        const { body: result } = await supertest(app.callback())
            .get(`/api/backend/applications/${body.id}`)
            .set("Authorization", `Bearer ${user.token}`)
            .expect(200)
        expect(result).toMatchSnapshot({ ...ignoreProps, apiKey: expect.any(String) })
    })
    it("Should able to activate basic application", async () => {
        const app = await createApp({ mode: "production" })
        const user = await createUser(app)
        const { body } = await supertest(app.callback())
            .post("/api/backend/applications")
            .set("Authorization", `Bearer ${user.token}`)
            .send({ name: "Lorem Ipsum" })
            .expect(200)
        await supertest(app.callback())
            .post(`/api/backend/applications/${body.id}/activate`)
            .set("Authorization", `Bearer ${user.token}`)
            .send({ payment: 5 })
            .expect(200)
        const { body: result } = await supertest(app.callback())
            .get(`/api/backend/applications/${body.id}`)
            .set("Authorization", `Bearer ${user.token}`)
            .expect(200)
        expect(result).toMatchSnapshot({ ...ignoreProps, apiKey: expect.any(String) })
    })
    it("Should able to activate premium application", async () => {
        const app = await createApp({ mode: "production" })
        const user = await createUser(app)
        const { body } = await supertest(app.callback())
            .post("/api/backend/applications")
            .set("Authorization", `Bearer ${user.token}`)
            .send({ name: "Lorem Ipsum" })
            .expect(200)
        await supertest(app.callback())
            .post(`/api/backend/applications/${body.id}/activate`)
            .set("Authorization", `Bearer ${user.token}`)
            .send({ payment: 20 })
            .expect(200)
        const { body: result } = await supertest(app.callback())
            .get(`/api/backend/applications/${body.id}`)
            .set("Authorization", `Bearer ${user.token}`)
            .expect(200)
        expect(result).toMatchSnapshot({ ...ignoreProps, apiKey: expect.any(String) })
    })
})